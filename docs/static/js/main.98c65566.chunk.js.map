{"version":3,"sources":["components/Navbar/navbar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Navbar/Friends/Friends.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Header/header.module.css","logo.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Settings/Settings.module.css","components/Header/header.jsx","components/Navbar/Friends/Friends.jsx","components/Navbar/navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/profile.jsx","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Settings/Settings.jsx","App.js","serviceWorker.js","redux/state.js","index.js"],"names":["module","exports","sidebar","navigation","item","active","posts","postsList","newPost","textarea","button","friends","user","avatar","userName","text","likes","dialogs","usersList","dialogsList","dialog","inputMsg","outputMsg","msg","header","logo","__webpack_require__","p","img","settings","Header","react_default","a","createElement","className","c","src","alt","Friends","props","items","map","elem","name","Navbar","classes","react_router_dom","to","activeClassName","Navbar_Friends_Friends","state","Post","MyPosts","postsElems","MyPosts_Post_Post","message","id","cols","rows","placeholder","type","ProfileInfo","Profile","profile","Profile_ProfileInfo_ProfileInfo","Profile_MyPosts_MyPosts","DialogItem","path","Message","Dialogs","dialogsElems","Dialogs_DialogItem_DialogItem","messagesElems","messages","el","Dialogs_Message_Message","Settings","App","navbar","react_router","render","components_Dialogs_Dialogs","messagesPage","profilePage","components_Settings_Settings","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98c65566.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"navbar_sidebar__RlD_9\",\"navigation\":\"navbar_navigation__23-kK\",\"item\":\"navbar_item__1Lyvz\",\"active\":\"navbar_active__erm8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"postsList\":\"MyPosts_postsList__128aV\",\"newPost\":\"MyPosts_newPost__3FkQO\",\"textarea\":\"MyPosts_textarea__3KLbu\",\"button\":\"MyPosts_button__2WbpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1-Zf7\",\"user\":\"Friends_user__1rZgZ\",\"avatar\":\"Friends_avatar__3QSSM\",\"userName\":\"Friends_userName__3Q0kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__y9YXG\",\"avatar\":\"Posts_avatar__3cFB7\",\"text\":\"Posts_text__3R7oj\",\"likes\":\"Posts_likes__2Y1cu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"usersList\":\"Dialogs_usersList__1NruR\",\"dialogsList\":\"Dialogs_dialogsList__137kM\",\"dialog\":\"Dialogs_dialog__lk_cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"DialogItem_user__2DSeg\",\"userName\":\"DialogItem_userName__2bG4n\",\"avatar\":\"DialogItem_avatar__12OzI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputMsg\":\"Message_inputMsg__2MmsD\",\"outputMsg\":\"Message_outputMsg__2vuPJ\",\"msg\":\"Message_msg__1M1nR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__HZ6Fg\",\"logo\":\"header_logo__3iSgw\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__1lpBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3U6ep\"};","import React from \"react\";\nimport logo from \"../../logo.svg\";\nimport c from './header.module.css'\n\nconst Header = () => {\n    return(\n        <header className={c.header}>\n            <img src={logo} alt=\"\" className={c.logo}/>\n        </header>\n    )\n};\n\nexport default Header;","import React from 'react';\nimport c from './Friends.module.css'\n\nconst Friends = (props) => {\n    const items = props.friends.map((elem) => {\n        return(\n            <div className={c.user}>\n                <div className={c.avatar}>\n\n                </div>\n                <div className={c.userName}>\n                    {elem.name}\n                </div>\n            </div>\n        )\n    });\n    return (\n        <div className={c.friends}>\n            <h3>My react friends </h3>\n            {items}\n        </div>\n    )\n};\n\nexport default Friends","import React from 'react';\nimport classes from './navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport Friends from \"./Friends/Friends\";\n\nconst Navbar = (props) => {\n    return(\n        <aside className={classes.sidebar}>\n            <nav className={classes.navigation}>\n                <NavLink to='/profile' className={classes.item} activeClassName={classes.active}> Profile</NavLink>\n                <NavLink to=\"/dialogs\" className={classes.item} activeClassName={classes.active}>Dialogs</NavLink>\n                <NavLink to=\"/settings\" className={classes.item} activeClassName={classes.active}>Settings</NavLink>\n            </nav>\n            <Friends friends={props.state.friends}/>\n        </aside>\n    )\n};\n\nexport default Navbar;","import React from 'react';\nimport c from './Posts.module.css'\n\nconst Post = (props) => {\n    return (\n        <div className={c.item}>\n            <div className={c.avatar}></div>\n            <div className={c.text}>{props.msg ? props.msg : \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet animi consequuntur delectus deleniti\"}</div>\n            <div className={c.likes}> {props.likes}</div>\n        </div>\n    )\n}\n\nexport default Post","import React from 'react';\nimport c from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\n\nconst MyPosts = (props) => {\n\n    let postsElems = props.posts.map(p => (<Post msg={p.message} likes={p.likes} />))\n\n    return(\n        <div className={c.posts}>\n           <div className={c.newPost}>\n               <textarea name=\"newPost\" id=\"newPost\" cols=\"30\" rows=\"10\" placeholder=\"Enter your post text\" className={c.textarea}></textarea>\n               <button type=\"button\" className={c.button}>Add post</button>\n           </div>\n            <div className={c.postsList}>\n                {postsElems}\n            </div>\n        </div>\n    );\n};\n\nexport default MyPosts","import React from 'react';\nimport c from './ProfileInfo.module.css'\n\nconst ProfileInfo = () => {\n    return (\n        <div>\n            <div className={c.img}> My React App</div>\n            {/*<div className=\"\">ava + descr</div>*/}\n        </div>\n    )\n};\n\nexport default ProfileInfo;","import React from 'react';\nimport c from './profile.module.css';\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\n\nconst Profile = (props) => {\n    return (\n        <div className={c.profile}>\n            <ProfileInfo/>\n            <MyPosts posts={props.state.posts}/>\n        </div>\n    )\n};\n\nexport default Profile;","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport c from './DialogItem.module.css'\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return(\n        <NavLink to={path} className={c.user}>\n            <div className={c.avatar}>\n\n            </div>\n            <div className={c.userName}>\n                {props.name}\n            </div>\n        </NavLink>\n    )\n};\n\nexport default DialogItem;","import React from 'react';\nimport c from \"./Message.module.css\";\n\nconst Message = (props) =>{\n    let type = props.type === 'input' ? c.inputMsg : props.type === 'output' ? c.outputMsg : '';\n    return(\n        <div className={type + \" \" + c.msg}>{props.text}</div>\n    )\n};\n\nexport default Message;","import React from 'react';\nimport c from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\n\nconst Dialogs = (props) => {\n\n\n    let dialogsElems =  props.state.dialogs.map(item => (<DialogItem name={item.name} id={item.id} />));\n    let messagesElems = props.state.messages.map(el => (<Message type={el.type} text={el.message} />));\n\n    return(\n        <div className={c.dialogs}>\n            <div className={c.usersList}>\n                { dialogsElems }\n            </div>\n            <div className={c.dialogsList}>\n                <div className={c.dialog}>\n                    { messagesElems }\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Dialogs;","import React from 'react';\nimport c from './Settings.module.css';\n\nconst Settings = () => {\n    return(\n        <div className={c.settings}>\n            Settings page\n        </div>\n    )\n};\n\nexport default Settings;","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nimport './App.css';\nimport Header from \"./components/Header/header\";\nimport Navbar from \"./components/Navbar/navbar\";\nimport Profile from \"./components/Profile/profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport Settings from \"./components/Settings/Settings\";\n\n\nconst App = (props) => {\n  return (\n      <BrowserRouter>\n          <div className=\"App\">\n              <Header/>\n              <Navbar state={props.state.sidebar}/>\n\n              <div className=\"main\">\n\n                  <Route path='/dialogs' render={ () => <Dialogs state={props.state.messagesPage}/> } />\n                  <Route path='/(profile|)' render={ () => <Profile state={props.state.profilePage} /> }/>\n                  <Route path='/settings' render={ () => <Settings/> }/>\n              </div>\n          </div>\n      </BrowserRouter>\n  );\n\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let state = {\n    messagesPage: {\n        dialogs: [\n            {id: '1', name: 'Viktor'},\n            {id: '2', name: 'Sebek'},\n            {id: '3', name: 'Cotlovan'},\n        ],\n\n        messages: [\n            {id: 1, message: 'Hey, how are you', type: 'input'},\n            {id: 2, message: 'Hi, a\\'im zbs. You?', type: 'output'},\n            {\n                id: 2,\n                message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam beatae blanditiis ' +\n                    'eaque explicabo illum itaque iure laboriosam libero modi, odio quisquam quos repellendus ' +\n                    'repudiandae rerum sapiente suscipit tempora tempore voluptates?',\n                type: 'output'\n            },\n            {id: 1, message: 'Okay, thanks for you respond', type: 'input'},\n        ]\n    },\n    profilePage: {\n        posts: [\n            {id: 1, message: 'Hi, how are you?', likes: '54'},\n            {id: 2, message: 'It\\'s my first react app', likes: '102'},\n            {id: 3, likes: '8'},\n        ],\n    },\n    sidebar: {\n        friends : [\n            {id: '2', name: 'Sebek'},\n            {id: '3', name: 'Cotlovan'},\n        ]\n    }\n};\n\nexport default state","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport state from './redux/state';\n\nReactDOM.render(<App state={state}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}